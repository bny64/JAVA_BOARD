<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
   http://www.springframework.org/schema/beans     
   http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context-4.2.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
   http://www.springframework.org/schema/security
   http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<!-- secuirty 제외할 url -->	
	<security:http pattern="/images/**" security="none"/>
	<security:http pattern="/js/**" security="none"/>
	<security:http pattern="/publishing/**" security="none"/>
	<security:http pattern="/style/**" security="none"/>
	<security:http pattern="/lib/**" security="none"/>
	<security:http pattern="/index.do" security="none"/>
	<security:http pattern="/auth/*.do" security="none"/>
	
	<!-- expression을 추가해야 hasRole, permitAll 등의 다양한 옵션을 사용할 수 있음. -->
	<!-- use-expressions="true"를 설정하지 않으면 false가 default. 이럴 때는 SpEL을 사용하지 않는다. -->
	<!-- <intercept-url pattern="..." access="ROLE_ANONYMOUS" /> -->
	<security:http auto-config="true" use-expressions="true">
		
		<!-- 해당 pattern의 url은 모두 허용. 나머지는 ROLE_USER 권한을 가진사람만 허용 -->
		<security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
		
		<!-- 보안설정 -->
		<security:csrf/> 
		
		<!-- <form-login 사용자이름과 비밀번호를 가지고 있는 폼기반 인증방법을 사용한다.> -->
		<!-- default-target-url : 로그인 성공시 이동할 페이지 설정 -->
		<!-- authentication-failure-url : 로그인 실패시 이동할 페이지 -->
		<!-- always-use-default-target="true" : true로 안주면 로그인 성공해도 제대로 안감.(더 알아봐야 함.) -->
		<security:form-login login-page="/auth/login.do"
			authentication-failure-url="/login.do" 
			authentication-success-handler-ref="loginSuccessHandler" 
			authentication-failure-handler-ref="loginFailureHandler"
			login-processing-url="/auth"
			username-parameter="email"
			password-parameter="password"
			always-use-default-target="true"
		/>
		
		<!-- 로그아웃되면 세션을 초기화한다. -->
		<!-- logout-url : 로그아웃 url -->
		<!-- logout-succes-url : 로그아웃 성공시 이동할 페이지 -->
		<security:logout invalidate-session="true"			
			logout-url="/auth/logout.do"
			logout-success-url="/index.do"			
		/>		
	
		<security:session-management invalid-session-url="/auth/login.do">
			<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
		</security:session-management>
		
	</security:http>
	
	<!-- secured method --> 
	<security:global-method-security secured-annotations="enabled" />

		
	<security:authentication-manager>
		<security:authentication-provider ref="userAuthProvider"/>
	</security:authentication-manager>
	
	<!-- bean -->
	
	<!-- <security:http auto-config="true" use-expressions="true">
		<security:csrf disabled="true" />
		<security:intercept-url pattern="/**"
			access="permitAll" />
		<security:form-login login-page="/login"
			authentication-success-handler-ref="loginSuccessHandler"
			authentication-failure-handler-ref="loginFailureHandler"
			login-processing-url="/auth" username-parameter="id"
			password-parameter="pw" />
		<security:logout logout-url="/logout"
			invalidate-session="true" logout-success-url="/login?status=logout" />
		<security:session-management
			invalid-session-url="/login">
			<security:concurrency-control
				max-sessions="1" error-if-maximum-exceeded="false" />
		</security:session-management>
	</security:http> secured method
	<security:global-method-security
		secured-annotations="enabled" /> provider
	<security:authentication-manager>
		<security:authentication-provider
			ref="userAuthHelper" />
	</security:authentication-manager>
	<bean id="loginSuccessHandler"
		class="com.devljh.domain.user.helper.LoginSuccessHandler">
		<property name="defaultTargetUrl" value="/main" />
		<property name="alwaysUseDefaultTargetUrl" value="true" />
	</bean>
	<bean id="loginFailureHandler"
		class="com.devljh.domain.user.helper.LoginFailureHandler">
		<property name="defaultFailureUrl" value="/login?status=fail" />
	</bean>
	<bean id="userAuthService"
		class="com.devljh.domain.user.UserAuthService" />
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="userAuthProvider"
		class="com.devljh.domain.user.helper.UserAuthProvider">
		<property name="userDetailsService" ref="userAuthService" />
		<property name="passwordEncoder" ref="passwordEncoder" />
	</bean> -->	
</beans>